services:
  app:
    container_name: admissions
    depends_on:
      database:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8888:8888"

  database:
    image: postgres:latest
    restart: always
    container_name: database
    environment:
      POSTGRES_PASSWORD: l2sh
      POSTGRES_USER: l2shdev
      POSTGRES_DB: admissions
    volumes:
      - ./scripts/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 1s
      timeout: 5s
      retries: 10

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    depends_on:
      database:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: l2sh@mail.ru
      PGADMIN_DEFAULT_PASSWORD: l2sh
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped

  migrate:
  image: migrate/migrate
  container_name: migrate
  depends_on:
    database:
      condition: service_healthy
  volumes:
    - ./migrations:/migrations
  entrypoint: [ "sh", "-c", "until nc -z -v -w30 database 5432; do echo waiting for database; sleep 1; done; migrate -path=/migrations -database=postgres://l2shdev:l2sh@database:5432/admissions?sslmode=disable up" ]

volumes:
  pgadmin:
