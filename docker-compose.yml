services:
  app:
    container_name: admissions
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
      cache:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    command: ./admissions
    environment:
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_KEY: ${JWT_KEY}
      MAIL_API_KEY: ${MAIL_API_KEY}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    develop:
      watch:
        - action: rebuild
          path: ./ui
        - action: rebuild
          path: ./cmd
        - action: rebuild
          path: ./internal
        - action: rebuild
          path: config.yml

  database:
    container_name: database
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_USER: l2sh
      POSTGRES_DB: admissions
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - database:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 1s
      timeout: 5s
      retries: 10
      start_period: 5s

  cache:
    container_name: cache
    image: redis:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 5s
      retries: 10
      start_period: 5s

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: l2sh@localhost.org
      PGADMIN_DEFAULT_PASSWORD: ${DB_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      GUNICORN_ACCESS_LOGFILE: /dev/null
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"

  postgrest:
    container_name: postgrest
    image: postgrest/postgrest:latest
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    environment:
      PGRST_DB_URI: postgres://l2sh:l2sh@database:5432/admissions
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: l2sh
      PGRST_SERVER_PROXY_URI: http://database:5432
      PGRST_SERVER_PORT: 3333
      PGRST_SERVER_HOST:
      PGRST_CORS: "true"
    ports:
      - "3333:3333"

  admin-panel:
    container_name: admin-panel
    build:
      context: ./admin-panel
      dockerfile: Dockerfile
    ports:
      - "4444:80"
    depends_on:
      - postgrest
    restart: unless-stopped

volumes:
  pgadmin:
  database:
