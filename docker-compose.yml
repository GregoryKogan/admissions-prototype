services:
  app:
    container_name: admissions
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
      cache:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    command: ./admissions
    secrets:
      - db_password
      - jwt_key
      - mail_api_key
      - admin_password
    develop:
      watch:
        - action: rebuild
          path: ./ui
        - action: rebuild
          path: ./cmd
        - action: rebuild
          path: ./internal
        - action: rebuild
          path: config.yml

  database:
    container_name: database
    image: postgres:latest
    profiles: [ dev ]
    restart: unless-stopped
    environment:
      POSTGRES_USER: l2sh
      POSTGRES_DB: admissions
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    volumes:
      - database:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    secrets:
      - db_password
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 1s
      timeout: 5s
      retries: 10
      start_period: 5s

  cache:
    container_name: cache
    image: redis:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 5s
      retries: 10
      start_period: 5s

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    profiles: [ dev ]
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: l2sh@localhost.org
      PGADMIN_DEFAULT_PASSWORD_FILE: /run/secrets/db_password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      GUNICORN_ACCESS_LOGFILE: /dev/null
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    secrets:
      - db_password

  postgrest:
    container_name: postgrest
    image: postgrest/postgrest:latest
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    environment:
      PGRST_DB_URI: postgres://l2sh:l2sh@database:5432/admissions
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: l2sh
      PGRST_SERVER_PROXY_URI: http://database:5432
      PGRST_SERVER_PORT: 3333
      PGRST_SERVER_HOST:
    ports:
      - "3333:3333"

secrets:
  db_password:
    file: ./secrets/db_password.txt
  jwt_key:
    file: ./secrets/jwt_key.txt
  mail_api_key:
    file: ./secrets/mail_api_key.txt
  admin_password:
    file: ./secrets/admin_password.txt

volumes:
  pgadmin:
  database:
